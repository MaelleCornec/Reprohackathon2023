Multicore support not enabled. Proceeding with single-core trimming.
Path to Cutadapt set as: 'cutadapt' (default)
Cutadapt seems to be working fine (tested command 'cutadapt --version')
Cutadapt version: 2.8
single-core operation.
Proceeding with 'gzip' for decompression
To decrease CPU usage of decompression, please install 'igzip' and run again

Output will be written into the directory: /home/ubuntu/Reprohackathon2023/workflow/data_trim/


AUTO-DETECTING ADAPTER TYPE
===========================
Attempting to auto-detect adapter type from the first 1 million sequences of the first file (>> data/SRR10379725.fastq <<)

Found perfect matches for the following adapter sequences:
Adapter type	Count	Sequence	Sequences analysed	Percentage
smallRNA	0	TGGAATTCTCGG	1000000	0.00
Illumina	0	AGATCGGAAGAGC	1000000	0.00
Nextera	0	CTGTCTCTTATA	1000000	0.00
Unable to auto-detect most prominent adapter from the first specified file (count smallRNA: 0, count Illumina: 0, count Nextera: 0)
Defaulting to Illumina universal adapter ( AGATCGGAAGAGC ). Specify -a SEQUENCE to avoid this behavior).

Writing report to '/home/ubuntu/Reprohackathon2023/workflow/data_trim/SRR10379725.fastq_trimming_report.txt'

SUMMARISING RUN PARAMETERS
==========================
Input filename: data/SRR10379725.fastq
Trimming mode: single-end
Trim Galore version: 0.6.10
Cutadapt version: 2.8
Number of cores used for trimming: 1
Quality Phred score cutoff: 20
Quality encoding type selected: ASCII+33
Adapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; default (inconclusive auto-detection))
Maximum trimming error rate: 0.1 (default)
Minimum required adapter overlap (stringency): 1 bp
Minimum required sequence length before a sequence gets removed: 25 bp

Cutadapt seems to be fairly up-to-date (version 2.8). Setting -j 1
Writing final adapter and quality trimmed output to SRR10379725_trimmed.fq


  >>> Now performing quality (cutoff '-q 20') and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file data/SRR10379725.fastq <<< 
10000000 sequences processed
20000000 sequences processed
30000000 sequences processed
40000000 sequences processed
This is cutadapt 2.8 with Python 3.8.10
Command line parameters: -j 1 -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC data/SRR10379725.fastq
Processing reads on 1 core in single-end mode ...
Finished in 332.43 s (7 us/read; 8.35 M reads/minute).

=== Summary ===

Total reads processed:              46,239,687
Reads with adapters:                17,389,389 (37.6%)
Reads written (passing filters):    46,239,687 (100.0%)

Total basepairs processed: 3,005,579,655 bp
Quality-trimmed:               1,241,908 bp (0.0%)
Total written (filtered):  2,974,797,951 bp (99.0%)

=== Adapter 1 ===

Sequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 17389389 times; Reverse-complemented: 0 times

No. of allowed errors:
0-9 bp: 0; 10-13 bp: 1

Bases preceding removed adapters:
  A: 42.1%
  C: 23.2%
  G: 19.4%
  T: 15.3%
  none/other: 0.0%

Overview of removed sequences
length	count	expect	max.err	error counts
1	6170280	11559921.8	0	6170280
2	10636558	2889980.4	0	10636558
3	312507	722495.1	0	312507
4	221586	180623.8	0	221586
5	39373	45155.9	0	39373
6	2370	11289.0	0	2370
7	832	2822.2	0	832
8	88	705.6	0	88
9	4891	176.4	0	65 4826
10	362	44.1	1	1 361
11	472	11.0	1	0 472
12	7	2.8	1	0 7
13	4	0.7	1	2 2
14	1	0.7	1	0 1
15	9	0.7	1	5 4
16	2	0.7	1	1 1
17	4	0.7	1	0 4
18	4	0.7	1	1 3
20	2	0.7	1	2
21	1	0.7	1	0 1
22	1	0.7	1	1
24	2	0.7	1	0 2
26	2	0.7	1	0 2
27	1	0.7	1	0 1
28	2	0.7	1	1 1
30	1	0.7	1	0 1
34	4	0.7	1	0 4
38	1	0.7	1	0 1
45	4	0.7	1	0 4
46	2	0.7	1	0 2
47	2	0.7	1	0 2
49	1	0.7	1	0 1
50	1	0.7	1	0 1
52	2	0.7	1	0 2
54	1	0.7	1	0 1
55	1	0.7	1	0 1
56	1	0.7	1	0 1
58	3	0.7	1	0 3
63	1	0.7	1	0 1
64	2	0.7	1	1 1
65	1	0.7	1	1

RUN STATISTICS FOR INPUT FILE: data/SRR10379725.fastq
=============================================
46239687 sequences processed in total
Sequences removed because they became shorter than the length cutoff of 25 bp:	534 (0.0%)

